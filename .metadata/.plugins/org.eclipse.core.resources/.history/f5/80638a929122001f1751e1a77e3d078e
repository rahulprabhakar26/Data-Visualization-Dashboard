package com.blackcoffer.datavis_dashboard.serviceimpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.blackcoffer.datavis_dashboard.entity.Data;
import com.blackcoffer.datavis_dashboard.repository.DataRepository;
import com.blackcoffer.datavis_dashboard.service.DataService;

@Service
public  class DataServiceImpl implements DataService {
	
	@Autowired
	DataRepository dataRepo;

	@Override
	public List<Data> getData() {
		return dataRepo.findAll();
	}

//	 @Override
    public List<Data> getDataByFilters(Integer endyear, String topics, String sector, String region, String pest, String source, String swot, String country, String city) {
        // This is a simplified example. You can enhance this method to perform filtering based on the provided parameters.
        // For demonstration purposes, we will filter the data manually.

        List<Data> allData = dataRepo.findAll();
        return allData.stream()
                .filter(data -> (endyear == null || data.getEndYear() == endyear) &&
                                (topics == null || data.getTopic().equalsIgnoreCase(topics)) &&
                                (sector == null || data.getSector().equalsIgnoreCase(sector)) &&
                                (region == null || data.getRegion().equalsIgnoreCase(region)) &&
                                (pest == null || data.getPestle().equalsIgnoreCase(pest)) &&
                                (source == null || data.getSource().equalsIgnoreCase(source)) &&
                                (swot == null || data.getSwot().equalsIgnoreCase(swot)) &&
                                (country == null || data.getCountry().equalsIgnoreCase(country)) &&
                                (city == null || data.getCity().equalsIgnoreCase(city)))
                .toList();
    }
}
